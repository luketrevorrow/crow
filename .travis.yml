language: cpp
dist: bionic
cache: ccache
notifications:
  slack:
    secure: UUU/k5i5bIkBkde2ZsEhX5KUNGDQJxea4vRe8F5f2zvLXxgW8ZyJw3tiKuNXm6tj0nUXAOnDBda8NLBtrMtHsYSWEzuzGe5MNblTjeExyhrM7S6ocpafE9xpMkk4E+XHOg/VFs4Z8LCqFi+kRAgqHBFY536yKpSsziP+sVkyIlu04VBFFoBqU2tuH/kVwUJ+KbnH9KR9o+O1m8i3FqnuYXBfaKa1QQ8chY9EXvFHUOQKZhd2poUp3qBF23HukMrRtcv8H/dwZZLugTkTqVwB2qup4GiJC5mTjDZXa9UAy4HdH2rUoxqqyzOPM/r18uWUEytr7nZnXGCwfDbx5OnnezN0sWRGh8Bq5bCvcR3OSSyLYhD6L0sZPezeTHA22jjl0BDJFUF3xSWMu61zKiAN3iA5HRa7oH8qturqZAyeF5Fv4HHR6GCMHJP26jwkCUkmrxQGurPAuvtgmKSJSNhkUQcYwLPJ+Z6cCVZRP3GiNUuZxXRmNMCj4dtIHW5eDuCwieyY8/zAGCkfl4Ea1bdzNlwRjhVheb/Ik7IHkZbAxqMH9Vp7bIRL0cJgsY5YNoq03OOnhCBSvzb1dTXzIILEpxEfWtjB0fu8mm6bLaJbpQ/MDko82rPEDy5dZ2/y1rkBiR3P9C3qO7YGnd1DoprX3DfIoG9OZxiAAbwqtUHbFM4=
compiler:
- gcc
matrix:
  include:
    - os: linux
      compiler: clang
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test', 'boost-latest']
          packages: ['g++-5', 'libboost-all-dev', python-pip]
      env: TOOLSET=clang++ TOOLSET_C=clang BUILD_TYPE='Release'

    - os: linux
      compiler: gcc
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test', 'boost-latest']
          packages: ['g++-4.8', 'libboost-all-dev', python-pip]
      env: TOOLSET=g++-4.8 TOOLSET_C=gcc-4.8 BUILD_TYPE='Debug'
    - os: linux
      compiler: gcc
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test', 'boost-latest']
          packages: ['g++-4.8', 'libboost-all-dev', python-pip]
      env: TOOLSET=g++-4.8 TOOLSET_C=gcc-4.8 BUILD_TYPE='Release'

    - os: linux
      compiler: gcc
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test', 'boost-latest']
          packages: ['g++-5', 'libboost-all-dev', python-pip]
      env: TOOLSET=g++-5 TOOLSET_C=gcc-5 BUILD_TYPE='Debug'
    - os: linux
      compiler: gcc
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test', 'boost-latest']
          packages: ['g++-5', 'libboost-all-dev', python-pip]
      env: TOOLSET=g++-5 TOOLSET_C=gcc-5 BUILD_TYPE='Release'

    - os: osx
      compiler: clang
      env: TOOLSET=clang++ TOOLSET_C=clang BUILD_TYPE='Debug'
    - os: osx
      compiler: clang
      env: TOOLSET=clang++ TOOLSET_C=clang BUILD_TYPE='Release'

install:
- if [ "$PUSH_COVERAGE" == "ON" ]; then pip install --user git+git://github.com/eddyxu/cpp-coveralls.git;
  fi
before_script:
- export CXX=$COMPILER CC=$CCOMPILER
- mkdir build
- cd build
- cmake --version
- cmake ..
script: make -j2 && ctest -j2
after_success:
- cd ..
- if [ "$PUSH_COVERAGE" == "ON" ]; then coveralls --gcov gcov-4.8 -i include --gcov-options
  '\-lp'; fi
